const Employee = require('../models/Employee')

const index = (req, res, next) => {
    Employee.find()
    .then(response => {
        res.json({
            response
        })
    })
    .catch(error => {
        res.json({
            message: "An error occured"
        })
    })
}

const show = (req, rea, next) => {
    let employeeID = req.body.employeeID
    Employee.findById(employeeID)
    .then(response => {
        res.json({
            response
        })
    })
    .catch(error => {
        res.json({
            message: "An error occured"
        })
    })
}

const store = (req, res, next) => {
    let employee = new Employee({
        name: req.body.name,
        designation: req.body.designation,
        email: req.body.email,
        phone: req.body.phone,
        age: req.body.age
    })
    employee.save()
    .then(response => {
        res.json({
            message: "Employee Added Successfully"
        })
    })
    .catch(error => {
        res.json({
            message: "An error occured"
        })
    })
}

const update = (req, res, next) => {
    let employeeID = req.body.employeeID
    let updatedData = {
        name: req.body.name,
        designation: req.body.designation,
        email: req.body.email,
        phone: req.body.phone,
        age: req.body.age
    }
    Employee.findByIdAndUpdate(employeeID, {$set: updatedData})
    .then(response => {
        res.json({
            message: "Employee Updated Successfully"
        })
    })
    .catch(error => {
        res.json({
            message: "An error occured"
        })
    })
    }

    const destroy = (req, res, next) => {
        let employeeID = req.body.employeeID
        Employee.findOneAndRemove(employeeID)
    .then(response => {
        res.json({
            message: "Employee Deleted Successfully"
            })
        })
    .catch(error => {
        res.json({
            message: "An error occured"
            })
        })
    }
        
    module.exports = {
        index, show, store, update, destroy
    }
    
